<f:subview xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:c="http://java.sun.com/jstl/core"
    xmlns:nxd="http://nuxeo.org/nxweb/document"
    xmlns:nxl="http://nuxeo.org/nxforms/layout"
    xmlns:nxu="http://nuxeo.org/nxweb/util"
    xmlns:nxr="http://nuxeo.org/nxweb/resources">

  <h:outputScript src="/bower_components/webcomponentsjs/webcomponents-lite.js"
      target="" />

  <nxr:import src="/nuxeo-labs-geomap-filter-ui/elements/elements.vulcanized.html"
      target="" />

  <style>
    .hidden {
      display: none;
    }
  </style>

  <ui:remove>
    <!--
    * The input field is hidden because the map is used to choose the value.
    * I placed it outside the <template> element to make it easier to access (if
    * it's inside the template then it becomes part of shadow DOM).
    -->
  </ui:remove>

  <div class="hidden">
    <h:inputText class="selected_state_input"
        value="#{fieldOrValue}">
    </h:inputText>
  </div>

  <template is="dom-bind">

    <nuxeo-labs-map-chart title="Incidents per State"
        region="US"
        resolution="provinces"
        selected-value="{{selectedState}}"
        on-click="handleClick">
    </nuxeo-labs-map-chart>
    <div>Selected: <span id="selected-state-span">[[selectedState]]</span></div>

    <script>
      var mapChart = document.querySelector('nuxeo-labs-map-chart');
      mapChart.data = [
        ["State", "Count"],
        ["NY", 95],
        ["CA", 72],
        ["FL", 62],
        ["GA", 43],
        ["WA", 25],
        ["MA", 39],
        ["NV", 10]
      ];
    </script>

  </template>

  <script>
    /**
     * The hidden &lt;input&gt; element is what performs the actual filtering.
     */
    var input = document.querySelector(".selected_state_input");

    var t = document.querySelector("template");

    /**
     * Get the previously selected value so that when the content is refreshed
     * the value is not lost.
     */
    t.selectedState = input.value;

    t.handleClick = function(e) {
      if (t.selectedState) {
        input.value = (t.selectedState);
      };
    };
  </script>

</f:subview>
